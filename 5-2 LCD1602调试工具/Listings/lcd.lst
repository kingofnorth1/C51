C51 COMPILER V9.60.0.0   LCD                                                               12/23/2021 16:56:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE D:\普中51-单核-A2 学习资料\普中51-单核-A2开发板资料\5--实验程序\lcd.c OPTI
                    -MIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.lst) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include "lcd.h"
   2          #include <REG52.H>
   3          
   4          /*******************************************************************************
   5          * 函 数 名         : Lcd1602_Delay1ms
   6          * 函数功能                 : 延时函数，延时1ms
   7          * 输    入         : c
   8          * 输    出         : 无
   9          * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
  10          *******************************************************************************/
  11          
  12          void Lcd1602_Delay1ms(uint c)   //误差 0us
  13          {
  14   1          uchar a,b;
  15   1              for (; c>0; c--)
  16   1              {
  17   2                       for (b=199;b>0;b--)
  18   2                       {
  19   3                              for(a=1;a>0;a--);
  20   3                       }      
  21   2              }
  22   1              
  23   1      }
  24          
  25          /*******************************************************************************
  26          * 函 数 名         : LcdWriteCom
  27          * 函数功能                 : 向LCD写入一个字节的命令
  28          * 输    入         : com
  29          * 输    出         : 无
  30          *******************************************************************************/
  31          #ifndef         LCD1602_4PINS    //当没有定义这个LCD1602_4PINS时
  32          void LcdWriteCom(uchar com)       //写入命令
  33          {
  34   1              LCD1602_E = 0;     //使能
  35   1              LCD1602_RS = 0;    //选择发送命令
  36   1              LCD1602_RW = 0;    //选择写入
  37   1              
  38   1              LCD1602_DATAPINS = com;     //放入命令
  39   1              Lcd1602_Delay1ms(1);            //等待数据稳定
  40   1      
  41   1              LCD1602_E = 1;            //写入时序
  42   1              Lcd1602_Delay1ms(5);      //保持时间
  43   1              LCD1602_E = 0;
  44   1      }
  45          #else 
              void LcdWriteCom(uchar com)       //写入命令
              {
                      LCD1602_E = 0;   //使能清零
                      LCD1602_RS = 0;  //选择写入命令
                      LCD1602_RW = 0;  //选择写入
              
                      LCD1602_DATAPINS = com; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
                      Lcd1602_Delay1ms(1);
              
C51 COMPILER V9.60.0.0   LCD                                                               12/23/2021 16:56:58 PAGE 2   

                      LCD1602_E = 1;   //写入时序
                      Lcd1602_Delay1ms(5);
                      LCD1602_E = 0;
              
                      LCD1602_DATAPINS = com << 4; //发送低四位
                      Lcd1602_Delay1ms(1);
              
                      LCD1602_E = 1;   //写入时序
                      Lcd1602_Delay1ms(5);
                      LCD1602_E = 0;
              }
              #endif
  67          /*******************************************************************************
  68          * 函 数 名         : LcdWriteData
  69          * 函数功能                 : 向LCD写入一个字节的数据
  70          * 输    入         : dat
  71          * 输    出         : 无
  72          *******************************************************************************/                   
  73          #ifndef         LCD1602_4PINS              
  74          void LcdWriteData(uchar dat)                    //写入数据
  75          {
  76   1              LCD1602_E = 0;  //使能清零
  77   1              LCD1602_RS = 1; //选择输入数据
  78   1              LCD1602_RW = 0; //选择写入
  79   1      
  80   1              LCD1602_DATAPINS = dat; //写入数据
  81   1              Lcd1602_Delay1ms(1);
  82   1      
  83   1              LCD1602_E = 1;   //写入时序
  84   1              Lcd1602_Delay1ms(5);   //保持时间
  85   1              LCD1602_E = 0;
  86   1      }
  87          #else
              void LcdWriteData(uchar dat)                    //写入数据
              {
                      LCD1602_E = 0;    //使能清零
                      LCD1602_RS = 1;   //选择写入数据
                      LCD1602_RW = 0;   //选择写入
              
                      LCD1602_DATAPINS = dat; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
                      Lcd1602_Delay1ms(1);
              
                      LCD1602_E = 1;    //写入时序
                      Lcd1602_Delay1ms(5);
                      LCD1602_E = 0;
              
                      LCD1602_DATAPINS = dat << 4; //写入低四位
                      Lcd1602_Delay1ms(1);
              
                      LCD1602_E = 1;    //写入时序
                      Lcd1602_Delay1ms(5);
                      LCD1602_E = 0;
              }
              #endif
 109          /*******************************************************************************
 110          * 函 数 名       : LcdInit()
 111          * 函数功能               : 初始化LCD屏
 112          * 输    入       : 无
 113          * 输    出       : 无
 114          *******************************************************************************/                   
 115          #ifndef         LCD1602_4PINS
 116          void LcdInit()                                            //LCD初始化子程序
C51 COMPILER V9.60.0.0   LCD                                                               12/23/2021 16:56:58 PAGE 3   

 117          {
 118   1              LcdWriteCom(0x38);  //开显示
 119   1              LcdWriteCom(0x0c);  //开显示不显示光标
 120   1              LcdWriteCom(0x06);  //写一个指针加1
 121   1              LcdWriteCom(0x01);  //清屏
 122   1              LcdWriteCom(0x80);  //设置数据指针起点
 123   1      }
 124          #else
              void LcdInit()                                            //LCD初始化子程序
              {
                      LcdWriteCom(0x32);       //将8位总线转为4位总线
                      LcdWriteCom(0x28);       //在四位线下的初始化
                      LcdWriteCom(0x0c);  //开显示不显示光标
                      LcdWriteCom(0x06);  //写一个指针加1
                      LcdWriteCom(0x01);  //清屏
                      LcdWriteCom(0x80);  //设置数据指针起点
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    109    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
